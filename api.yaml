openapi: 3.0.0
info:
  version: 0.0.1
  title: api
servers:
  - url: "/api"
paths:
  /login:
    get:
      tags:
        - login
      summary: login api
      operationId: login
      parameters:
        - name: uuid
          in: query
          description: the user uuid
          required: true
          schema:
            type: string
        - name: username
          in: query
          description: the user name
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: the user password
          required: true
          schema:
            type: string
      responses:
        200:
          description: Login response
          content:
            application/json:
              type: object
              required:
                - success
                - passwordDiff
                - cookie
                - time
              properties:
                success:
                  type: Boolean
                  description: true if the password is valid
                passwordDiff:
                  type: array
                  items: number
                  description: the diff of the given password from the actual password
                cookie:
                  type: string
                  description: the user cookie
                time:
                  type: number
                  description: the time the user have to login befor password change
  /login/doesUserLoggedIn:
    get:
      tags:
        - does user logged in
      summary: does user logged login api
      operationId: doesUserLoggedIn
      parameters:
        - name: uuid
          in: query
          description: the user uuid
          required: true
          schema:
            type: string
      responses:
        200:
          description: LoggedIn response
          content:
            application/json:
              type: boolean
              description: true if the user has logged in
  /search:
    get:
      tags:
        - search
      summary: search api
      operationId: search
      parameters:
        - name: text
          in: query
          description: The search regex
          required: true
          schema:
            type: string
      responses:
        200:
          description: results found
          content:
            application/json:
              type: object
              required:
                - totalResults
                - title
                - content
                - binaryFile
              properties:
                totalResults:
                  type: number
                  description: total results found
                title:
                  type: string
                  description: title of first result
                content:
                  type: string
                  description: content of first result
                binaryFile:
                  type: boolean
                  description: true if the file is binary
  /maze/level:
    get:
      tags:
        - maze level
      summary: maze level api
      operationId: mazeLevel
      parameters:
        - name: id
          in: query
          description: the level id
          required: true
          schema:
            type: string
      responses:
        200:
          description: the level
          content:
            application/json:
              type: object
              required:
                - levelId
                - question
                - answers
                - passwordPlace
              properties:
                levelId:
                  type: string
                  description: the level id
                question:
                  type: string
                  description: the question
                answers:
                  type: array
                  items:
                    type: string
                  description: the answers
                passwordPlace:
                  type: string
                  description: the place where the password is
    post:
      tags:
        - maze level
      summary: maze level api
      operationId: mazeLevel
      parameters:
        - name: uuid
          in: query
          description: the user uuid
          required: true
          schema:
            type: string
        - name: id
          in: query
          description: the level id
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: the level password
          required: true
          schema:
            type: string
        - name: answer
          in: query
          description: the level answer
          required: true
          schema:
            type: string
      responses:
        200:
          description: the next level
          content:
            application/json:
              type: object
              required:
                - nextLevelId
              properties:
                nextLevelId:
                  type: string
                  description: the next level id
  /captcha/is-blocked:
    get:
      tags:
        - captcha isBlocked
      summary: Check whether CTF can move on to next level
      operationID: isBlocked
      responses:
        '200':
          description: Whether CTF can move on to next level
          content:
            application/json:
              schema:
                type: boolean